// app/api/email/route.ts

import { NextResponse } from "next/server";
import nodemailer from "nodemailer";

export async function POST(req: Request) {
Â  try {
Â  Â  const { subject, message, userEmail } = await req.json();

Â  Â  if (!subject || !message) {
Â  Â  Â  return NextResponse.json(
Â  Â  Â  Â  { error: "Subject and message are required" },
Â  Â  Â  Â  { status: 400 }
Â  Â  Â  );
Â  Â  }

    const { SMTP_HOST, SMTP_PORT, SMTP_USER, SMTP_PASS, ADMIN_EMAIL } = process.env;

    if (!SMTP_HOST || !SMTP_USER || !SMTP_PASS || !ADMIN_EMAIL) {
        console.error("Missing critical SMTP environment variables!");
        return NextResponse.json(
            { error: "Server configuration error: Email credentials missing." },
            { status: 500 }
        );
    }

Â  Â  // Create SMTP transporter using your Gmail or SMTP service
Â  Â  const transporter = nodemailer.createTransport({
Â  Â  Â  host: SMTP_HOST,
Â  Â  Â  port: Number(SMTP_PORT) || 465,
Â  Â  Â  secure: true, // true for port 465, false for 587
Â  Â  Â  auth: {
Â  Â  Â  Â  user: SMTP_USER,
Â  Â  Â  Â  pass: SMTP_PASS,
Â  Â  Â  },
Â  Â  });

Â  Â  const mailOptions = {
Â  Â  Â  from: userEmail || SMTP_USER, // show user's email if provided
Â  Â  Â  to: ADMIN_EMAIL,
Â  Â  Â  subject: subject,
Â  Â  Â  text: `
ðŸ“¦ New Order Received

${message}

----------------------------
From: ${userEmail || "No email provided"}
`,
Â  Â  };

Â  Â  await transporter.sendMail(mailOptions);

Â  Â  return NextResponse.json({ success: true });
Â  } catch (err: any) {
Â  Â  console.error("Email send failed:", err);
Â  Â  return NextResponse.json(
Â  Â  Â  { error: "Email send failed", details: err.message },
Â  Â  Â  { status: 500 }
Â  Â  );
Â  }
}